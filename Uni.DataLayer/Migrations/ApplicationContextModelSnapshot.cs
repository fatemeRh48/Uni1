// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uni.DataLayer;

#nullable disable

namespace Uni.DataLayer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Uni.DataLayer.Entities.en.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PlaceOfGraduation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("YearOfGraduation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.en.Formerly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Award")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseSubject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Invention")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MainPublications")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Membership")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonalAccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("integer");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("formerly");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.en.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AcademicRank")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PlaceOfGraduation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkExperience")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearOfGraduation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.syllabus.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CoursePurpose")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseResult")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PrerequisiteCourse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SourceBook")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.syllabus.EducationalMaterials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Assignments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OtherReferences")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Projects")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SyllabusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SyllabusId")
                        .IsUnique();

                    b.ToTable("EducationalMaterials");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.syllabus.Syllabus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Assessment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Communication")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CoursesId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DesigningADevice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GlobalCommunity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GroupsFunctions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentifyingFormulating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Instructor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Interpretation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Issues")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Knowledge")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModernTechnology")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumberOfCredits")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Responsibility")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SettingDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Training")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lessonType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("need")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoursesId")
                        .IsUnique();

                    b.ToTable("syllabus");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.en.Education", b =>
                {
                    b.HasOne("Uni.DataLayer.Entities.en.User", "User")
                        .WithMany("Educations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.en.Formerly", b =>
                {
                    b.HasOne("Uni.DataLayer.Entities.en.User", "Profesor")
                        .WithMany("Formerlies")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.syllabus.EducationalMaterials", b =>
                {
                    b.HasOne("Uni.DataLayer.Entities.syllabus.Syllabus", "syllabus")
                        .WithOne("EducationalMaterials")
                        .HasForeignKey("Uni.DataLayer.Entities.syllabus.EducationalMaterials", "SyllabusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("syllabus");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.syllabus.Syllabus", b =>
                {
                    b.HasOne("Uni.DataLayer.Entities.syllabus.Courses", "Courses")
                        .WithOne("Syllabus")
                        .HasForeignKey("Uni.DataLayer.Entities.syllabus.Syllabus", "CoursesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.en.User", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Formerlies");
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.syllabus.Courses", b =>
                {
                    b.Navigation("Syllabus")
                        .IsRequired();
                });

            modelBuilder.Entity("Uni.DataLayer.Entities.syllabus.Syllabus", b =>
                {
                    b.Navigation("EducationalMaterials")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
